# Generated by Django 4.1.3 on 2023-01-29 12:47

import phonenumber_field.modelfields

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import apps.account.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('data', '0002_country_region_subregion_city_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('service', '0003_alter_service_describe'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='first name'
                    ),
                ),
                (
                    'last_name',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='last name'
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'date_joined',
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name='date joined'
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        blank=True, max_length=150, verbose_name='Username'
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        max_length=255, unique=True, verbose_name='Email'
                    ),
                ),
                (
                    'is_admin',
                    models.BooleanField(default=False, verbose_name='Is admin'),
                ),
                (
                    'balance',
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name='Balance',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', apps.account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'phone_number',
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=100,
                        null=True,
                        region=None,
                        verbose_name='Phone number',
                    ),
                ),
                (
                    'auto_withdraw_balance_funds',
                    models.BooleanField(
                        default=False, verbose_name='Withdraw from balance funds'
                    ),
                ),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('birthday', models.DateField(null=True, verbose_name='Birthday')),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                (
                    'place_work',
                    models.CharField(
                        blank=True, max_length=255, verbose_name='Place of work'
                    ),
                ),
                ('key_cases', models.TextField(blank=True, verbose_name='Key cases')),
                (
                    'account',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='profile_account',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'city',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='profile_city',
                        to='data.city',
                    ),
                ),
                (
                    'country',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='profile_country',
                        to='data.country',
                    ),
                ),
                (
                    'gender',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='profile_gender',
                        to='data.gender',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='AccountServiceThrough',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('date_activated', models.DateTimeField(auto_now_add=True)),
                ('enabled', models.BooleanField(default=True)),
                (
                    'account',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='account_service_through_account',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'service',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='account_service_through_service',
                        to='service.service',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='services',
            field=models.ManyToManyField(
                blank=True,
                related_name='account_services',
                through='account.AccountServiceThrough',
                to='service.service',
            ),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(
                blank=True,
                help_text='Specific permissions for this user.',
                related_name='user_set',
                related_query_name='user',
                to='auth.permission',
                verbose_name='user permissions',
            ),
        ),
    ]
